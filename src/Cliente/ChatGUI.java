/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente;

import java.awt.Color;
import java.awt.FlowLayout;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


/**
 *
 * @author Ismael Cortes
 */

public class ChatGUI extends javax.swing.JFrame {

    String nombreUsuario;
    String host;
    int puerto;
    Socket socket;
    DataOutputStream salida;
    private boolean conectado = false;
    public boolean archivoAdjuntoAbierto = false;
    private String carpetaDescargas = "D:\\";

    /**
     * Creates new form ChatGUI
     */
    public ChatGUI() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jfilechooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mensajes_panel = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        online_panel = new javax.swing.JTextPane();
        mensaje_txt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        enviar_btn = new javax.swing.JButton();
        enviarArchivo_btn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        nombre_label = new javax.swing.JLabel();
        salir_btn = new javax.swing.JButton();
        status_label = new javax.swing.JLabel();
        estado_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 0, 0));
        jPanel1.setForeground(new java.awt.Color(102, 255, 102));

        jScrollPane1.setViewportView(mensajes_panel);

        jScrollPane2.setViewportView(online_panel);

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Usuarios en linea:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 4, Short.MAX_VALUE))
        );

        enviar_btn.setBackground(new java.awt.Color(255, 255, 255));
        enviar_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/archivos/enviar.png"))); // NOI18N
        enviar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviar_btnActionPerformed(evt);
            }
        });

        enviarArchivo_btn.setBackground(new java.awt.Color(255, 255, 255));
        enviarArchivo_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/archivos/send_file.png"))); // NOI18N
        enviarArchivo_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarArchivo_btnActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/archivos/icono1.png"))); // NOI18N

        nombre_label.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nombre_label.setText("jLabel3");

        salir_btn.setBackground(new java.awt.Color(153, 0, 0));
        salir_btn.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        salir_btn.setForeground(new java.awt.Color(255, 255, 255));
        salir_btn.setText("Cerrar Sesi√≥n");
        salir_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir_btnActionPerformed(evt);
            }
        });

        status_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        status_label.setForeground(new java.awt.Color(0, 153, 0));
        status_label.setText("jLabel3");

        estado_label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        estado_label.setText("Estado:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                    .addComponent(mensaje_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(enviar_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enviarArchivo_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(29, 29, 29))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(salir_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(estado_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(status_label, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(nombre_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(nombre_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(salir_btn)
                            .addComponent(estado_label)
                            .addComponent(status_label)))
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mensaje_txt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enviar_btn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(enviarArchivo_btn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int confirmacion = JOptionPane.showConfirmDialog(this, "¬øDesea cerrar esta aplicaci√≥n?");
        //Si el usuario selecciona la ocion de si para cerrar la aplicacion
        //entonces se cierra el socket
        if(confirmacion == 0){
         try{
          socket.close();
          }catch(IOException e) {
                System.out.println(e.getMessage());
          }
            this.dispose();
            System.exit(0);
        }
        
    }//GEN-LAST:event_formWindowClosing

    private void enviar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviar_btnActionPerformed
        // TODO add your handling code here:
               
        String contenido = nombreUsuario+" "+ mensaje_txt.getText();
        try {
            salida.writeUTF("CMD_CHATALL "+ contenido);
            agregarMiMensaje(" "+mensaje_txt.getText(), nombreUsuario);
            mensaje_txt.setText("");
        } catch (IOException ex) {
            agregarMensaje("No se puede enviar el mensaje ahora, el servidor no est√° disponible en este momento. Vuelva a intentarlo m√°s tarde o reinicie esta aplicaci√≥n.", "Error", Color.RED, Color.RED);
        }
 
    }//GEN-LAST:event_enviar_btnActionPerformed

    private void salir_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir_btnActionPerformed
        // TODO add your handling code here:
        int confirmacion = JOptionPane.showConfirmDialog(null, "¬øDesea cerrar sesi√≥n?");
        //Si el usuario selecciona la ocion de si para cerrar la aplicacion
        //entonces se cierra el socket
        if(confirmacion == 0){
         try{
          socket.close();
          setVisible(false);
          
          //Regresar a la GUI del login
          new LoginGUI().setVisible(true);
          }catch(IOException e) {
                System.out.println(e.getMessage());
          }
        }
    }//GEN-LAST:event_salir_btnActionPerformed

    private void enviarArchivo_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarArchivo_btnActionPerformed
        // TODO add your handling code here:
        
        if(!archivoAdjuntoAbierto){
            EnviarArchivosGUI s = new EnviarArchivosGUI();
            if(s.prepare(nombreUsuario, host, puerto, this)){
                s.setLocationRelativeTo(null);
                s.setVisible(true);
                archivoAdjuntoAbierto = true;
            } else {
                JOptionPane.showMessageDialog(this, "No se ha enviado el archivo.", "Error", JOptionPane.ERROR_MESSAGE);
            }        
        }
    }//GEN-LAST:event_enviarArchivo_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton enviarArchivo_btn;
    private javax.swing.JButton enviar_btn;
    private javax.swing.JLabel estado_label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JFileChooser jfilechooser;
    private javax.swing.JTextField mensaje_txt;
    private javax.swing.JTextPane mensajes_panel;
    private javax.swing.JLabel nombre_label;
    private javax.swing.JTextPane online_panel;
    private javax.swing.JButton salir_btn;
    private javax.swing.JLabel status_label;
    // End of variables declaration//GEN-END:variables
     
  
   void iniciarGUI(String nombreUsuario, String host, int puerto) {
        this.nombreUsuario = nombreUsuario;
        this.host = host;
        this.puerto = puerto;
        //Titulo de la gui que pone el nombre de la persona
        //que ha ingresado
        setTitle("Ha iniciado sesi√≥n como: " + nombreUsuario);
        nombre_label.setText(nombreUsuario);
        //Conectar
        conexion();
   }
   
   private void conexion() {
        try {
            socket = new Socket(host, puerto);
            salida = new DataOutputStream(socket.getOutputStream());
            //Mandar nombre de usuario
            salida.writeUTF("CMD_JOIN "+ nombreUsuario);
            //Poner el estado en la gui del cliente
            status_label.setText("En l√≠nea...");
            //Iniciar hilo del cliente
            new Thread(new Cliente(socket, this)).start();
            enviar_btn.setEnabled(true);
            //Activar estado activo de cliente
            conectado = true; 
        }catch(IOException e) {
            //Desactivar estado activo de cliente
            conectado = false;
            JOptionPane.showMessageDialog(this, "No se ha podido conectar con el servidor.","Conexi√≥n fallida",JOptionPane.ERROR_MESSAGE);
            agregarMensaje("[IOException]: "+ e.getMessage(), "Error", Color.RED, Color.RED);
        }
    }
    
    //Retornar estado activo o no activo de conexion
    public boolean isConnected(){
        return this.conectado;
    }

    //Mensaje del sistema
    void agregarMensaje(String msj, String header, Color headerColor, Color contentColor) {
        mensajes_panel.setEditable(true);
        getMensajeHeader(header, headerColor);
        getMensajeContenido(msj, contentColor);
        mensajes_panel.setEditable(false);
    }
    
    //Mi mensaje
    private void agregarMiMensaje(String msj, String nombreUsuario) {
        mensajes_panel.setEditable(true);
        getMensajeHeader(nombreUsuario, Color.GREEN);
        getMensajeContenido(msj, Color.DARK_GRAY);
        mensajes_panel.setEditable(false);
    }
        
    //Contenido del mensaje
    //Contenido del mensaje de texto enviado y recibido
    private void getMensajeContenido(String msj, Color color) {
        int len = mensajes_panel.getDocument().getLength();
        mensajes_panel.setCaretPosition(len);
        mensajes_panel.setCharacterAttributes(EstiloMensaje.EstiloMensajeChat(color,"Arial",13), false);
        mensajes_panel.replaceSelection(msj +"\n\n");
    }
    
    //Mensaje del encabezado
     //Encabezado de mensaje, es el nombre de la persona del chat
    public void getMensajeHeader(String header, Color color){
        int length = mensajes_panel.getDocument().getLength();
        mensajes_panel.setCaretPosition(length);
        mensajes_panel.setCharacterAttributes(EstiloMensaje.EstiloMensajeChat(color,"Arial",13), false);
        mensajes_panel.replaceSelection(header+":");
        
    }
    
    //A√±adir lista de usuarios que estan conectados
    void appendOnlineList(Vector lista) {
        mostrarListaUsuariosOnline(lista); 
    }

    //Mostrar en linea a los usuarios online en el panel de la GUI
    private void mostrarListaUsuariosOnline(Vector lista) {
        
        online_panel.setEditable(true);
        online_panel.removeAll();
        online_panel.setText("");
        Iterator i = lista.iterator();
        while(i.hasNext()){
            Object e = i.next();
            //Mostrar la lista de usuarios online
            JPanel panel = new JPanel();
            panel.setLayout(new FlowLayout(FlowLayout.LEFT));
            //Agregar color de fondo al nombre de usuario en linea
            panel.setBackground(Color.white);
            //Agregar imagen a nombre de usuario de estado activo
            Icon icon = new ImageIcon(this.getClass().getResource("/archivos/online.png"));
            JLabel label = new JLabel(icon);
            label.setText(" "+ e);
            panel.add(label);
            int len = online_panel.getDocument().getLength();
            online_panel.setCaretPosition(len);
            online_panel.insertComponent(panel);
            //Agregar siguiente linea
            agregarUsuariosOnline();
        }
       online_panel.setEditable(false);
    }

    //A√±adir usuario
    private void agregarUsuariosOnline() {
        int length = online_panel.getDocument().getLength();
        online_panel.setCaretPosition(length);
        online_panel.replaceSelection("\n");
    }

        //Abirir el file chooser para guardar el archivo a descargar
    void abrirArchivos() {
        jfilechooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int open = jfilechooser.showDialog(this, "Guardar");
        if(open == jfilechooser.APPROVE_OPTION){
           carpetaDescargas = jfilechooser.getSelectedFile().toString()+"\\";
        }else{
           carpetaDescargas = "D:\\";
        }
    }
    
    //Obtener host
    public String getMyHost(){
        return this.host;
    }
    
    //Obtener puerto
    public int getMyPort(){
        return this.puerto;
    }
    
    //Obtener nombre de usuario
    public String getMyUsername(){
        return this.nombreUsuario;
    }
    
    //Poner titulo gui
    public void setMyTitle(String ArchivoDescarga) {
        setTitle(ArchivoDescarga);
    }
    
    //Ubicacion de descarga del archivo
    String getMyDownloadFolder() {
        return this.carpetaDescargas;
    }

    void actualizarArchivoAdjunto(boolean b) {
        this.archivoAdjuntoAbierto = b;
    }  
   
}
